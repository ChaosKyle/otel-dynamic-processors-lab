# OpenTelemetry Dynamic Processors Lab - Environment Configuration
# Copy this file to .env and update with your actual values

# Grafana Cloud Configuration
# Get these values from your Grafana Cloud account
GRAFANA_CLOUD_INSTANCE_ID=your-instance-id
GRAFANA_CLOUD_API_KEY=glc_your_api_key_here
GRAFANA_CLOUD_PROMETHEUS_URL=https://prometheus-prod-01-eu-west-0.grafana.net/api/prom/push
GRAFANA_CLOUD_TEMPO_URL=https://tempo-prod-04-eu-west-0.grafana.net:443

# Grafana Cloud Authentication (base64 encoded)
# Format: echo -n "instanceId:apiKey" | base64
GRAFANA_CLOUD_PROMETHEUS_AUTH=your-base64-encoded-prometheus-auth
GRAFANA_CLOUD_TEMPO_AUTH=your-base64-encoded-tempo-auth

# Application Configuration
APP_NAME=my-awesome-app
APP_VERSION=2.0.0
ENVIRONMENT=production
SERVICE_NAMESPACE=microservices

# Infrastructure Configuration
K8S_CLUSTER_NAME=prod-cluster
CLOUD_REGION=us-east-1

# OpenTelemetry Configuration
SAMPLING_PERCENTAGE=100
LOG_LEVEL=info

# Example environments (uncomment to test different scenarios):
# Development environment
# ENVIRONMENT=dev
# APP_NAME=my-app-dev
# SAMPLING_PERCENTAGE=100

# Staging environment
# ENVIRONMENT=staging
# APP_NAME=my-app-staging
# SAMPLING_PERCENTAGE=50

# Production environment (default)
# ENVIRONMENT=production
# APP_NAME=my-app-prod
# SAMPLING_PERCENTAGE=10

# Notes:
# - The ENVIRONMENT variable controls which data gets filtered
# - dev environment traces will be dropped by the filter processor
# - SAMPLING_PERCENTAGE controls the probabilistic sampling rate
# - LOG_LEVEL can be: debug, info, warn, error