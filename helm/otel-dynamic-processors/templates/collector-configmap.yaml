{{- if .Values.collector.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "otel-dynamic-processors.collector.fullname" . }}-config
  labels:
    {{- include "otel-dynamic-processors.collector.labels" . | nindent 4 }}
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:{{ index .Values.collector.service.ports "otlp-grpc" }}
          http:
            endpoint: 0.0.0.0:{{ index .Values.collector.service.ports "otlp-http" }}
      
      # Self-monitoring
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 15s
              static_configs:
                - targets: ['0.0.0.0:{{ .Values.collector.service.ports.metrics }}']

    processors:
      # Resource detection for automatic labeling
      resourcedetection:
        detectors: {{ toYaml .Values.collector.config.resourceDetection.detectors | nindent 10 }}
        {{- if has "k8s_node" .Values.collector.config.resourceDetection.detectors }}
        k8s_node:
          {{- toYaml .Values.collector.config.resourceDetection.k8s_node | nindent 10 }}
        {{- end }}
        {{- if has "k8s_pod" .Values.collector.config.resourceDetection.detectors }}
        k8s_pod:
          {{- toYaml .Values.collector.config.resourceDetection.k8s_pod | nindent 10 }}
        {{- end }}
        {{- if has "system" .Values.collector.config.resourceDetection.detectors }}
        system:
          resource_attributes:
            host.name:
              enabled: true
            host.id:
              enabled: true
            os.description:
              enabled: true
            os.type:
              enabled: true
        {{- end }}
        {{- if has "process" .Values.collector.config.resourceDetection.detectors }}
        process:
          resource_attributes:
            process.pid:
              enabled: true
            process.executable.name:
              enabled: true
            process.command_line:
              enabled: true
            process.runtime.name:
              enabled: true
            process.runtime.version:
              enabled: true
        {{- end }}

      # Enhanced resource attributes
      resource:
        attributes:
          - key: service.name
            value: ${APP_NAME}
            action: upsert
          - key: service.version
            value: ${APP_VERSION}
            action: upsert
          - key: service.namespace
            value: ${SERVICE_NAMESPACE}
            action: upsert
          - key: deployment.environment
            value: ${ENVIRONMENT}
            action: upsert
          - key: k8s.cluster.name
            value: ${CLUSTER_NAME}
            action: upsert
          - key: cloud.region
            value: ${REGION}
            action: upsert
          - key: telemetry.sdk.name
            value: opentelemetry
            action: upsert
          - key: collector.layer
            value: ingestion
            action: upsert

      # Advanced attribute manipulation
      attributes:
        actions:
          # Normalize service names
          - key: service.name
            pattern: ^(.*)-(dev|staging|prod)$
            action: extract
            from_attribute: service.name
          
          # Add custom labels for better organization
          - key: telemetry.layer
            value: collector
            action: insert
          - key: pipeline.stage
            value: ingestion
            action: insert
          - key: data.source
            value: otel-collector
            action: insert

      # Sampling for cost control
      probabilistic_sampler:
        sampling_percentage: {{ .Values.collector.config.sampling.percentage }}

      # Batch processing for efficiency
      batch:
        {{- toYaml .Values.collector.config.batch | nindent 8 }}

      # Memory limiter for stability
      memory_limiter:
        {{- toYaml .Values.collector.config.memory_limiter | nindent 8 }}

    exporters:
      # Forward to processor layer
      otlp/processor:
        endpoint: {{ include "otel-dynamic-processors.processor.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ index .Values.processor.service.ports "otlp-grpc" }}
        tls:
          insecure: true
        sending_queue:
          num_consumers: 4
          queue_size: 100
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s

      # Self-monitoring metrics
      prometheus:
        endpoint: "0.0.0.0:{{ .Values.collector.service.ports.metrics }}"
        namespace: "otelcol"
        const_labels:
          cluster: ${CLUSTER_NAME}
          environment: ${ENVIRONMENT}
          service: ${APP_NAME}

    extensions:
      health_check:
        endpoint: 0.0.0.0:{{ .Values.collector.service.ports.health }}
      pprof:
        endpoint: 0.0.0.0:1777
      zpages:
        endpoint: 0.0.0.0:55679

    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, resourcedetection, resource, attributes, probabilistic_sampler, batch]
          exporters: [otlp/processor]
        
        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, resourcedetection, resource, attributes, batch]
          exporters: [otlp/processor]
      
      telemetry:
        logs:
          level: info
        metrics:
          address: 0.0.0.0:{{ .Values.collector.service.ports.metrics }}
{{- end }}