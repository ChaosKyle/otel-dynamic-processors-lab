# Grok Recommendation Engine - Label Policies Configuration
# This file defines label policies for telemetry data compliance

version: "1.0"
description: "Label policies for OpenTelemetry telemetry data filtering and compliance"

# Global policy settings
global:
  enforcement_mode: "drop"  # drop, warn, fix
  policy_violation_action: "log"  # log, alert, block
  required_compliance_level: "high"  # low, medium, high

# Label policies
policies:
  # Environment policy - ensures all telemetry has proper environment labels
  - name: "environment_compliance"
    description: "Enforce environment labeling for all telemetry data"
    priority: "high"
    enabled: true
    required_labels:
      - environment
      - deployment.environment
    label_patterns:
      - name: "environment"
        pattern: "^(dev|staging|prod|production)$"
        case_sensitive: false
      - name: "deployment.environment"
        pattern: "^(development|staging|production)$"
        case_sensitive: false
    enforcement: "drop"
    violation_message: "Telemetry data must have valid environment labels"
    
  # Service identification policy
  - name: "service_identification"
    description: "Ensure proper service identification in all telemetry"
    priority: "high"
    enabled: true
    required_labels:
      - service.name
      - service.version
    label_patterns:
      - name: "service.name"
        pattern: "^[a-z0-9-]+$"
        case_sensitive: true
      - name: "service.version"
        pattern: "^v?[0-9]+\\.[0-9]+\\.[0-9]+.*$"
        case_sensitive: false
    enforcement: "drop"
    violation_message: "Service name and version must be properly formatted"
    
  # Security and compliance policy
  - name: "security_compliance"
    description: "Prevent sensitive data from being included in telemetry"
    priority: "critical"
    enabled: true
    forbidden_labels:
      - password
      - secret
      - api_key
      - token
      - private_key
      - ssn
      - credit_card
    forbidden_patterns:
      - ".*password.*"
      - ".*secret.*"
      - ".*key.*"
      - ".*token.*"
    enforcement: "drop"
    violation_message: "Sensitive data detected in telemetry labels"
    
  # Performance and optimization policy
  - name: "performance_optimization"
    description: "Optimize telemetry data for performance and cost"
    priority: "medium"
    enabled: true
    label_constraints:
      - name: "cardinality_limit"
        max_unique_values: 1000
        scope: "metric"
        enforcement: "warn"
      - name: "label_count_limit"
        max_labels_per_signal: 20
        scope: "all"
        enforcement: "warn"
    enforcement: "warn"
    violation_message: "High cardinality or too many labels detected"
    
  # Data quality policy
  - name: "data_quality"
    description: "Ensure data quality and consistency"
    priority: "medium"
    enabled: true
    label_validations:
      - name: "user_id_format"
        pattern: "^user-[0-9]+$"
        required_for_services: ["user-service", "auth-service"]
        enforcement: "warn"
      - name: "request_id_format"
        pattern: "^req-[a-f0-9-]+$"
        required_for_traces: true
        enforcement: "warn"
    enforcement: "warn"
    violation_message: "Data quality issues detected"
    
  # Compliance and governance policy
  - name: "governance_compliance"
    description: "Ensure compliance with governance requirements"
    priority: "high"
    enabled: true
    required_labels:
      - team
      - cost_center
      - project
    label_patterns:
      - name: "team"
        pattern: "^(platform|backend|frontend|data|security|ops)$"
        case_sensitive: false
      - name: "cost_center"
        pattern: "^CC-[0-9]{4}$"
        case_sensitive: false
      - name: "project"
        pattern: "^[a-z0-9-]+$"
        case_sensitive: true
    enforcement: "warn"
    violation_message: "Governance labels missing or malformed"

# Custom rules for specific scenarios
custom_rules:
  # Production environment rules
  - name: "production_strict"
    description: "Strict rules for production environment"
    condition: 'labels["environment"] == "prod" || labels["environment"] == "production"'
    rules:
      - type: "require_label"
        label: "monitoring.enabled"
        value: "true"
      - type: "require_label"
        label: "backup.enabled"
        value: "true"
      - type: "forbid_label"
        label: "debug.enabled"
    enforcement: "drop"
    
  # Development environment rules
  - name: "development_flexible"
    description: "Flexible rules for development environment"
    condition: 'labels["environment"] == "dev" || labels["environment"] == "development"'
    rules:
      - type: "allow_label"
        label: "debug.enabled"
      - type: "allow_label"
        label: "test.mode"
    enforcement: "warn"
    
  # High-volume service rules
  - name: "high_volume_optimization"
    description: "Optimization rules for high-volume services"
    condition: 'labels["service.name"] in ["user-service", "payment-service", "inventory-service"]'
    rules:
      - type: "limit_cardinality"
        max_values: 500
      - type: "require_sampling"
        sampling_rate: 0.1
      - type: "forbid_label"
        label: "debug.*"
    enforcement: "drop"

# Notification settings
notifications:
  enabled: true
  channels:
    - type: "log"
      level: "warn"
    - type: "metrics"
      metric_name: "grok_policy_violations_total"
    - type: "webhook"
      url: "${env:POLICY_WEBHOOK_URL}"
      headers:
        "Authorization": "Bearer ${env:WEBHOOK_TOKEN}"
      enabled: false

# Monitoring and alerting
monitoring:
  enabled: true
  metrics_prefix: "grok_policy_"
  export_interval: "1m"
  alert_thresholds:
    violation_rate: 0.1  # Alert if violation rate > 10%
    policy_failures: 100  # Alert if > 100 policy failures per minute
    
# Policy update settings
updates:
  auto_reload: true
  reload_interval: "5m"
  backup_on_change: true
  backup_directory: "/tmp/policy_backups"